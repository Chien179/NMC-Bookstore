Project nmc_bookstore {
  database_type: 'PostgreSQL'
  Note: '''
    # NMC Bookstore Database
  '''
}


Table users as U {
  username varchar [pk]
  full_name varchar [not null]
  email varchar [not null, unique]
  password varchar [not null]
  age int [not null]
  sex varchar [not null]
  image varchar [not null]
  phone_number varchar [not null]
  role varchar [not null]
  password_changed_at timestamptz [not null, default: '0001-01-01 00:00:00Z']
  is_email_verified boolean [not null, default: false]
  created_at timestamptz [not null, default:"now()"]
}

Table verify_emails {
  id bigserial [pk]
  username varchar [ref: > U.username, not null]
  email varchar [not null]
  secret_code varchar [not null]
  is_used bool [not null, default: false]
  created_at timestamptz [not null, default:'now()']
  expired_at timestamptz [not null, default:`now()  + interval '15 minutes'`]
}

Table reset_passwords {
  id bigserial [pk]
  username varchar [ref: > U.username, not null]
  reset_code varchar [not null]
  is_used bool [not null, default: false]
  created_at timestamptz [not null, default:'now()']
  expired_at timestamptz [not null, default:`now()  + interval '15 minutes'`]
}

Table address as A{
  id bigserial [pk]
  address varchar [not null]
  username varchar [ref: > U.username, not null]
  city_id bigserial [ref: > C.id, not null]
  district_id bigserial [ref: > D.id, not null]
  created_at timestamptz [not null, default:"now()"]
  
  indexes{
    username
    city_id
    district_id
    (username, city_id, district_id)
  }
}

Table cities as C {
  id bigserial [pk]
  name varchar [not null]
  created_at timestamptz [not null, default:"now()"]
}

Table districts as D {
  id bigserial [pk]
  city_id bigserial [ref: > C.id, not null]
  name varchar [not null]
  created_at timestamptz [not null, default:"now()"]
  indexes{
    city_id
  }
}

Table books as B {
  id bigserial [pk]
  name varchar [not null]
  price float [not null]
  image varchar[] [not null]
  description varchar [not null]
  author varchar [not null]
  publisher varchar [not null]
  quantity int [not null]
  rating float [not null, default:0]
  created_at timestamptz [not null, default:"now()"]
}

Table genres as G{
  id bigserial [pk]
  name varchar [not null]
  created_at timestamptz [not null, default:"now()"]
}

Table subgenres as SG{
  id bigserial [pk]
  genres_id bigserial [ref: > G.id, not null]
  name varchar [not null]
  created_at timestamptz [not null, default:"now()"]
  
  indexes {
     genres_id
  }
}

Table carts as BC{
  id bigserial [pk]
  books_id bigserial [ref: > B.id, not null]
  username varchar [ref: > U.username, not null]
  amount int [not null, default: 1]
  total float [not null, default: 0]
  created_at timestamptz [not null, default:"now()"]
  
  indexes{
    books_id
    username
    (books_id, username)
  }
}

Table books_genres as BG {
  id bigserial [pk]
  books_id bigserial [ref: > B.id, not null]
  genres_id bigserial [ref: > G.id, not null]
  created_at timestamptz [not null, default:"now()"]
  
  indexes {
    books_id
    genres_id
    (books_id, genres_id)
  }
}

Table books_subgenres as BS {
  id bigserial [pk]
  books_id bigserial [ref: > B.id, not null]
  subgenres_id bigserial [ref: > SG.id, not null]
  created_at timestamptz [not null, default:"now()"]
  
  indexes {
    books_id
    subgenres_id
    (books_id, subgenres_id)
  }
}

Table reviews as R {
  id bigserial [pk]
  username varchar [ref: > U.username, not null]
  books_id bigserial [ref: > B.id, not null]
  comments varchar [not null]
  rating int [not null]
  created_at timestamptz [not null, default:"now()"]
  
  indexes{
    username
    books_id
    (username, books_id)
  }
}

Table orders as O {
  id bigserial [pk]
  username varchar [ref: > U.username, not null]
  status varchar [not null, default:"unpaid"]
  sub_amount int [not null, default: 1]
  sub_total float [not null, default:0]
  created_at timestamptz [not null, default:"now()"]
  
  indexes{
    username
  }
}

Table transactions as T {
  id bigserial [pk]
  orders_id bigserial [ref: > O.id, not null]
  books_id bigserial [ref: > B.id, not null]
  amount int [not null, default: 1]
  total float [not null, default: 0]
  created_at timestamptz [not null, default:"now()"]
  
  indexes{
    books_id
    orders_id
    (books_id, orders_id)
  }
}

Table wishlists as BW{
  id bigserial [pk]
  books_id bigserial [ref: > B.id, not null]
  username varchar [ref: > U.username, not null]
  created_at timestamptz [not null, default:"now()"]
  
  indexes{
    books_id
    username
    (books_id, username)
  }
}

Table sessions {
    id uuid [pk]
    username varchar [ref: > U.username, not null]
    refresh_token varchar [not null]
    user_agent varchar [not null]
    client_ip varchar [not null]
    is_blocked boolean [not null, default: 'false']
    expires_at timestamptz [not null]
    created_at timestamptz [not null, default:'now()']
}

Table searchs {
    id bigserial [pk]
    book_name varchar [not null]
    price float [not null]
    author varchar [not null]
    publisher varchar [not null]
    rating float [not null]
    genres varchar [not null]
    subgenres varchar [not null]
    searchs_tsv tsvector
}

Table payments as P{
  id bigserial [pk]
  username varchar [ref: > U.username, not null]
  order_id bigserial [ref: - O.id, not null]
  shipping_id bigserial [ref: - S.id, not null]
  price float [not null, default:0]
  subtotal float [not null, default:0]
  status varchar [not null, default:"failed"]
  created_at timestamptz [not null, default:'now()']

  indexes{
    username
    order_id
    shipping_id
    (username, order_id, shipping_id)
  }
}

Table shippings as S {
  id bigserial [pk]
  to_address varchar [not null]
  total float [not null, default:0]
}