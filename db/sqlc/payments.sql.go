// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.18.0
// source: payments.sql

package db

import (
	"context"
)

const createPayment = `-- name: CreatePayment :one
INSERT INTO payments (
  id,
  username,
  order_id,
  shipping_id,
  subtotal,
  status
) VALUES (
  $1, $2, $3, $4, $5, $6
)
RETURNING id, username, order_id, shipping_id, subtotal, status, created_at
`

type CreatePaymentParams struct {
	ID         string  `json:"id"`
	Username   string  `json:"username"`
	OrderID    int64   `json:"order_id"`
	ShippingID int64   `json:"shipping_id"`
	Subtotal   float64 `json:"subtotal"`
	Status     string  `json:"status"`
}

func (q *Queries) CreatePayment(ctx context.Context, arg CreatePaymentParams) (Payment, error) {
	row := q.db.QueryRowContext(ctx, createPayment,
		arg.ID,
		arg.Username,
		arg.OrderID,
		arg.ShippingID,
		arg.Subtotal,
		arg.Status,
	)
	var i Payment
	err := row.Scan(
		&i.ID,
		&i.Username,
		&i.OrderID,
		&i.ShippingID,
		&i.Subtotal,
		&i.Status,
		&i.CreatedAt,
	)
	return i, err
}
