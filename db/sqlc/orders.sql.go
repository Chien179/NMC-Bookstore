// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.16.0
// source: orders.sql

package db

import (
	"context"
)

const createOrder = `-- name: CreateOrder :one
INSERT INTO orders (
    users_id
) VALUES (
  $1
)
RETURNING id, users_id, created_at
`

func (q *Queries) CreateOrder(ctx context.Context, usersID int64) (Order, error) {
	row := q.db.QueryRowContext(ctx, createOrder, usersID)
	var i Order
	err := row.Scan(&i.ID, &i.UsersID, &i.CreatedAt)
	return i, err
}

const deleteOrder = `-- name: DeleteOrder :exec
DELETE FROM orders
WHERE id = $1
`

func (q *Queries) DeleteOrder(ctx context.Context, id int64) error {
	_, err := q.db.ExecContext(ctx, deleteOrder, id)
	return err
}

const getOrder = `-- name: GetOrder :one
SELECT id, users_id, created_at FROM orders
WHERE id = $1 LIMIT 1
`

func (q *Queries) GetOrder(ctx context.Context, id int64) (Order, error) {
	row := q.db.QueryRowContext(ctx, getOrder, id)
	var i Order
	err := row.Scan(&i.ID, &i.UsersID, &i.CreatedAt)
	return i, err
}
